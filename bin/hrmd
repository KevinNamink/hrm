#!/bin/bash
#
# hrmd         Huygens Remote Manager daemon
#
# chkconfig: - 85 15
# description: Huygens Remote Manager daemon
# processname: hrmd
#
### BEGIN INIT INFO
# Provides: hrmd
# Required-Start:
# Description: The HRM Queue Manager daemon
### END INIT INFO
#
# This file is part of the Huygens Remote Manager
# Copyright and license notice: see license.txt

warn_daemon_user() {
    cat << EOF
WARNING *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING

Your setup does not have the "SUSER" variable configured to be used for running
the HRM Queue Manager. Usually, this results in the daemon being run as root.

This is HIGHLY DEPRECATED as of HRM 3.1.0 and will not be supported in future
releases. Please see the documentation how to correctly configure your HRM:

http://huygens-rm.org/

WARNING *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING *** WARNING

EOF
}

# Make sure to have a known locale environment for the script:
export LC_ALL=C

# Set the default for the PHP CLI binary (can be overridden in hrm.conf):
PHP_CLI="php"

# hrm.conf defines variable HRM_HOME
. /etc/hrm.conf

if [ -n "$DEBUG_HRMD" ] ; then
    set -o xtrace
fi

# Simplify the "sudo" usage below:
if [ -z "$SUSER" ] ; then
    CMD=""
    warn_daemon_user
else
    CMD="sudo -u $SUSER"
fi

# Global variables definition:
LOG_OUT="${HRM_LOG}/log.txt"
LOG_ERR="${HRM_LOG}/error_log.txt"
HRMD_PID="${HRM_LOG}/hrmd.pid"

usage_exit() {
    echo "Usage: $0 {start|stop|restart}"
    exit 1
}

start() {
    # TODO: as we're writing a PID file below, can't we just use it here?
    # Is an instance of the Queue Manager already running?
    inst=`ps aux | grep runHuygensRemoteManager.php`;
    if [[ $inst == *"php -q"* ]]
    then
        echo
        echo "The Queue Manager is already running: I won't start another instance."
        usage_exit
    fi
    
    # TODO: do we really need two different logfiles here?
    echo "Reporting stdout to '$LOG_OUT' and stderr to '$LOG_ERR'."
    MARK="$(date "+%F %H:%M:%S") - trying to start the HRM Queue Manager"
    echo "$MARK" >> "$LOG_OUT"
    echo "$MARK" >> "$LOG_ERR"

    cd "$HRM_HOME"/run
    echo -n "Starting HRM daemon..................."
    QUEUEMGR="$PHP_CLI -q "$HRM_HOME"/run/runHuygensRemoteManager.php"
    $CMD $QUEUEMGR 1>> "$LOG_OUT" 2>> "$LOG_ERR" &
    # bash provides the PID of the background process in "$!", so we save it:
    QUEUEMGR_PID=$!
    if [ "$?" = 0 ] ; then
        echo $QUEUEMGR_PID > "$HRMD_PID"
        echo "[ok]"
    else
        echo "[ERROR]"
        # This will show if anything went wrong during the start up.
        tail "$LOG_OUT"
    fi
}


stop() {
    if ! [ -f "$HRMD_PID" ]
    then
        echo "No PID file found, no HRM seems to be running."
        exit 0
    fi

    PID=$(more "$HRMD_PID")
    if [ -n "$PID" ] ; then
        kill -15 $PID
        if [ "$?" = 0 ]
        then
            $CMD rm -f "$HRMD_PID"
            echo "Shutting down HRM daemon..............ok"
        fi
    else
        echo "WARNING: empty PID file found, trying to remove it:"
        $CMD rm -f -v "$HRMD_PID"
        exit 1
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    *)
        usage_exit
        ;;
esac

